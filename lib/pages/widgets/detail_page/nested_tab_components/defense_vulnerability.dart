import 'package:flutter/material.dart';
import 'package:nationaldex/constants/app_colors.dart';

class DefenseVulnerability extends StatelessWidget {
  final Map<String, double> typeRelation;
  const DefenseVulnerability({Key? key, required this.typeRelation})
      : super(key: key);

  @override
  Widget build(BuildContext context) {
    Widget getCircleAvatar(double? typeRatio) {
      final Color? backgroundColor = AppColor.colorWeakness[typeRatio];
      return typeRatio != null
          ? CircleAvatar(
              radius: 20,
              backgroundColor: backgroundColor,
              child: Text(
                '$typeRatio',
                style: const TextStyle(
                    color: Colors.white, fontWeight: FontWeight.bold),
              ),
            )
          : Container();
    }

    return GridView.count(
      childAspectRatio: 1 / 2,
      crossAxisSpacing: 5,
      mainAxisSpacing: 5,
      crossAxisCount: 6,
      children: [
        for (String type in AppColor.typeColor.keys)
          Container(
            margin: EdgeInsets.zero,
            decoration: BoxDecoration(
              color: Colors.grey.shade200,
              borderRadius: BorderRadius.circular(10),
            ),
            child: Stack(
              children: [
                FractionallySizedBox(
                  alignment: Alignment.topCenter,
                  heightFactor: 0.5,
                  child: Container(
                    decoration: BoxDecoration(
                      color: AppColor.typeColor[type],
                      borderRadius: BorderRadius.circular(10),
                    ),
                    child: Center(
                      child: Text(
                        type.substring(0, 3).toUpperCase(),
                        style: const TextStyle(
                          fontWeight: FontWeight.bold,
                          color: Colors.white,
                        ),
                      ),
                    ),
                  ),
                ),
                Positioned(
                  bottom: 5,
                  left: 0,
                  right: 0,
                  child: getCircleAvatar(typeRelation[type]),
                ),
              ],
            ),
          ),
      ],
    );
  }
}
